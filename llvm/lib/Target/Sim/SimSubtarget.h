//===-- SimSubtarget.h - Define Subtarget for the Sim -------*- C++ -*-===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
//
// This file declares the Sim specific subclass of TargetSubtargetInfo.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_SIM_SIMSUBTARGET_H
#define LLVM_LIB_TARGET_SIM_SIMSUBTARGET_H

#include "SimFrameLowering.h"
#include "SimISelLowering.h"
#include "SimInstrInfo.h"
#include "llvm/ADT/Triple.h"
#include "llvm/CodeGen/SelectionDAGTargetInfo.h"
#include "llvm/CodeGen/TargetSubtargetInfo.h"
#include "llvm/IR/DataLayout.h"
#include <string>

#define GET_SUBTARGETINFO_HEADER
#include "SimGenSubtargetInfo.inc"

namespace llvm {
class StringRef;

class SimSubtarget : public SimGenSubtargetInfo {
  Triple TargetTriple;
  virtual void anchor();

  SimInstrInfo InstrInfo;
  SimTargetLowering TLInfo;
  SelectionDAGTargetInfo TSInfo;
  SimFrameLowering FrameLowering;

public:
  SimSubtarget(const Triple &TT, const std::string &CPU,
                 const std::string &FS, const TargetMachine &TM);

  const SimInstrInfo *getInstrInfo() const override { return &InstrInfo; }
  const TargetFrameLowering *getFrameLowering() const override { return &FrameLowering; }
  const SimRegisterInfo *getRegisterInfo() const override { return &InstrInfo.getRegisterInfo(); }
  const SimTargetLowering *getTargetLowering() const override { return &TLInfo; }
  const SelectionDAGTargetInfo *getSelectionDAGInfo() const override { return &TSInfo; }

  bool enableMachineScheduler() const override;

  /// ParseSubtargetFeatures - Parses features string setting specified
  /// subtarget options.  Definition of function is auto generated by tblgen.
  void ParseSubtargetFeatures(StringRef CPU, StringRef TuneCPU, StringRef FS);
  SimSubtarget &initializeSubtargetDependencies(StringRef CPU, StringRef FS);
};

} // end namespace llvm

#endif
